# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|

  # Example configuration of new VM..
  config.vm.define :test_vm do |test_vm|
    # Box name
    test_vm.vm.box = "elastic/ubuntu-14.04-x86_64"

    # Domain Specific Options
    test_vm.vm.provider :libvirt do |domain|
      domain.memory = 16384
      domain.cpus = 6
    end

    # Interfaces for VM
    # test_vm.vm.network :private_network, :ip => '192.168.123.123'
    # test_vm.vm.network :public_network, :ip => '192.168.123.123'
  end

  # Options for libvirt vagrant provider.
  config.vm.provider :libvirt do |libvirt|

    libvirt.driver = "kvm"

    #The name of the server, where libvirtd is running.
    # libvirt.host = "localhost"

    # If use ssh tunnel to connect to Libvirt.
    libvirt.connect_via_ssh = false

    # The username and password to access Libvirt. Password is not used when connecting via ssh.
    libvirt.username = "root"
    #libvirt.password = "secret"

    # Libvirt storage pool name, where box image and instance snapshots will be stored.
    libvirt.storage_pool_name = "default"

    libvirt.storage :file, :size => '40G'

    # Set a prefix for the machines that's different than the project dir name.
    #libvirt.default_prefix = ''
  end

   config.vm.provision "file", source: "~/.ssh/id_rsa", destination: "$HOME/.ssh/id_rsa"
   config.vm.provision "file", source: "~/.ssh/id_rsa.pub", destination: "$HOME/.ssh/id_rsa.pub"
   config.vm.provision "file", source: "~/.ssh/known_hosts", destination: "$HOME/.ssh/known_hosts"
   config.vm.provision "file", source: "~/.aws", destination: "$HOME/.aws"
   config.vm.provision "file", source: "make_partition.sh", destination: "$HOME/make_partition.sh"

  config.vm.provision "ansible" do |ansible|
    ansible.verbose = "v"
    ansible.become = false
    ansible.playbook = "playbook.yml"
  end 

end
